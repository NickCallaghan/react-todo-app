{"version":3,"sources":["componoents/AddToDo.js","componoents/ToDo.js","componoents/ToDoList.js","componoents/Stats.js","componoents/FilterBar.js","componoents/App.js","serviceWorker.js","index.js"],"names":["AddToDo","newTodoRef","React","createRef","handleAddToDo","event","preventDefault","current","value","key","Date","now","newToDo","index","task","complete","props","updateToDo","currentTarget","reset","className","onSubmit","this","ref","type","placeholder","Component","ToDo","handleToggleTodo","id","updatedTodo","todo","handleDeleteToDo","deleteToDo","checked","htmlFor","onClick","ToDoList","filterTodos","filter","todos","Object","keys","map","renderTodos","renderNoToDos","length","Stats","completed","reduce","acc","remaining","FilterBar","changeActiveFilter","e","list","childNodes","forEach","node","classList","contains","toggle","updatedFilter","updateFilter","all","open","App","state","1","2","3","undefined","setState","newFilter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4b1748ee.chunk.js","sourcesContent":["import React from \"react\";\n\nclass AddToDo extends React.Component {\n  newTodoRef = React.createRef();\n\n  handleAddToDo = event => {\n    event.preventDefault();\n    // Add a todo if not empty\n    if (this.newTodoRef.current.value !== \"\") {\n      const key = Date.now();\n      const newToDo = {\n        index: key,\n        key: key,\n        task: this.newTodoRef.current.value,\n        complete: false\n      };\n\n      this.props.updateToDo(key, newToDo);\n      event.currentTarget.reset();\n    }\n  };\n\n  render() {\n    return (\n      <form className=\"add-todo\" onSubmit={this.handleAddToDo}>\n        <input\n          ref={this.newTodoRef}\n          type=\"text\"\n          placeholder=\"Add something to do\"\n        />{\" \"}\n        <button type=\"submit\">+</button>\n      </form>\n    );\n  }\n}\n\nexport default AddToDo;\n","import React from \"react\";\n\nclass ToDo extends React.Component {\n  handleToggleTodo = event => {\n    event.preventDefault();\n    const key = event.currentTarget.id;\n    let updatedTodo = {\n      ...this.props.todo\n    };\n    updatedTodo.complete = !updatedTodo.complete;\n    this.props.updateToDo(key, updatedTodo);\n  };\n\n  handleDeleteToDo = event => {\n    event.preventDefault();\n    const key = event.currentTarget.id;\n    this.props.deleteToDo(key);\n  };\n\n  render() {\n    const { index, task, complete, key } = this.props.todo;\n    return (\n      <div className={`todo-item ${complete ? \"checked\" : \"not-checked\"}`}>\n        <input\n          type=\"checkbox\"\n          key={`${key}`}\n          id={`${index}`}\n          checked={complete}\n        />\n        <label\n          id={`${index}`}\n          htmlFor={`${index}`}\n          onClick={this.handleToggleTodo}\n        >\n          {task}\n        </label>\n        {/* <span\n          id={`${index}`}\n          className=\"remove-todo\"\n          onClick={this.handleDeleteToDo}\n        >\n          X\n        </span> */}\n      </div>\n    );\n  }\n}\n\nexport default ToDo;\n","import React from 'react';\nimport ToDo from './ToDo';\n\nclass ToDoList extends React.Component {\n\tfilterTodos = filter => {\n\t\t// Get todos\n\t\tlet todos = Object.keys(this.props.todos).map(key => {\n\t\t\treturn { ...this.props.todos[key] };\n\t\t});\n\t\tif (filter === 'completed') {\n\t\t\ttodos = todos.filter(todo => todo.complete === true);\n\t\t}\n\t\tif (filter === 'open') {\n\t\t\ttodos = todos.filter(todo => todo.complete === false);\n\t\t}\n\t\treturn todos;\n\t};\n\n\trenderTodos = todos => {\n\t\treturn (\n\t\t\t<div className=\"todo-list\">\n\t\t\t\t{todos.map(todo => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ToDo\n\t\t\t\t\t\t\tkey={todo.index}\n\t\t\t\t\t\t\ttodo={todo}\n\t\t\t\t\t\t\tupdateToDo={this.props.updateToDo}\n\t\t\t\t\t\t\tdeleteToDo={this.props.deleteToDo}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t);\n\t};\n\n\trenderNoToDos = () => {\n\t\treturn <div className=\"no-todos\">Nothing to do!</div>;\n\t};\n\n\trender() {\n\t\tconst todos = this.filterTodos(this.props.filter);\n\t\treturn todos.length ? this.renderTodos(todos) : this.renderNoToDos();\n\t}\n}\nexport default ToDoList;\n","import React from \"react\";\n\nclass Stats extends React.Component {\n  render() {\n    //Calculated the number of completed ToDo items\n    const completed = Object.keys(this.props.todos).reduce((acc, key) => {\n      if (this.props.todos[key] && this.props.todos[key].complete === true) {\n        return (acc += 1);\n      }\n      return acc;\n    }, 0);\n    //Calculated the number of inComplete ToDo items\n    const remaining = Object.keys(this.props.todos).reduce((acc, key) => {\n      if (this.props.todos[key] && this.props.todos[key].complete === false) {\n        return (acc += 1);\n      }\n      return acc;\n    }, 0);\n\n    // Rendering the stats component\n    return (\n      <div className=\"stats\">\n        <div className=\"stats-completed card\">\n          <h3>Completed</h3>\n          <p>{completed}</p>\n        </div>\n        <div className=\"stats-remaining card\">\n          <h3>Remaining</h3>\n          <p>{remaining}</p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Stats;\n","import React from \"react\";\n\n\n\nclass FilterBar extends React.Component {\n  constructor(props){\n    super(props);  \n    this.list = React.createRef();\n    this.all = React.createRef();\n    this.open = React.createRef();\n    this.completed = React.createRef();\n  }\n  changeActiveFilter = e => {\n    // Get node list for filter options and untoggle active class\n    const listNodes = this.list.current.childNodes;\n    listNodes.forEach(node => {\n      if(node.classList.contains('active')){\n        node.classList.toggle('active')\n      }\n    })\n    //Get filter for clicked link and set state for clicked link\n    const updatedFilter = e.currentTarget.classList[0];\n    this.props.updateFilter(updatedFilter);\n    // Toggle active for the event target\n    e.currentTarget.classList.toggle('active');\n\n  }\n\n  render() {\n    return (\n      <ul className=\"filter-list\" ref={this.list}>\n        <li ref={this.all} className=\"all active\" onClick={this.changeActiveFilter}>All</li>\n        <li ref={this.open} className=\"open\" onClick={this.changeActiveFilter}>Open</li>\n        <li ref={this.completed} className=\"completed\" onClick={this.changeActiveFilter}>Completed</li>\n      </ul>\n      \n    );\n  }\n}\n\nexport default FilterBar;\n","import React from 'react';\nimport AddToDo from './AddToDo';\nimport ToDoList from './ToDoList';\nimport Stats from './Stats';\nimport FilterBar from './FilterBar';\n\nclass App extends React.Component {\n\tstate = {\n\t\ttodos: {\n\t\t\t1: {\n\t\t\t\tindex: 1,\n\t\t\t\tkey: 1,\n\t\t\t\ttask: 'Feed the cat',\n\t\t\t\tcomplete: true,\n\t\t\t},\n\t\t\t2: {\n\t\t\t\tindex: 2,\n\t\t\t\tkey: 2,\n\t\t\t\ttask: 'Walk the cat',\n\t\t\t\tcomplete: false,\n\t\t\t},\n\t\t\t3: {\n\t\t\t\tindex: 3,\n\t\t\t\tkey: 3,\n\t\t\t\ttask: 'Play with the cat',\n\t\t\t\tcomplete: false,\n\t\t\t},\n\t\t},\n\t\tfilter: 'all',\n\t};\n\n\tupdateToDo = (key, updateToDo) => {\n\t\tlet todos = { ...this.state.todos };\n\t\ttodos[key] = updateToDo || undefined;\n\t\tthis.setState({ todos });\n\t};\n\n\tdeleteToDo = key => {\n\t\tlet todos = { ...this.state.todos };\n\t\ttodos[key] = null;\n\t\tthis.setState({ todos });\n\t};\n\n\tupdateFilter = newFilter => {\n\t\tconst updatedFilter = newFilter;\n\t\tthis.setState({ filter: updatedFilter });\n\t};\n\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"todo-container\">\n\t\t\t\t<h1 className=\"main-heading\">Happy Cat To Do List</h1>\n\t\t\t\t<p className=\"sub-heading\">Happy cats mean completed todos</p>\n\n\t\t\t\t<AddToDo updateToDo={this.updateToDo} />\n\n\t\t\t\t<FilterBar updateFilter={this.updateFilter} />\n\n\t\t\t\t<ToDoList\n\t\t\t\t\tfilter={this.state.filter}\n\t\t\t\t\ttodos={this.state.todos}\n\t\t\t\t\tupdateToDo={this.updateToDo}\n\t\t\t\t\tdeleteToDo={this.deleteToDo}\n\t\t\t\t/>\n\t\t\t\t<Stats todos={this.state.todos} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./scss/style.scss\";\nimport App from \"./componoents/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}